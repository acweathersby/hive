#version 430

layout(local_size_x = 32, local_size_y = 1) in;

struct Pixel{
    vec2 pos;              // 0
    vec2 fpos;
    vec2 vel;              // 2
    vec2 fvel;
    float Buffer;               // 3
    float Radius;               // 4
    float mass;                 // 5
    float FrictionCoefficient;  // 6
    int linkname[4];            // 7
};

layout(std430, binding = 1) buffer Pixels {
    Pixel pixels[];  
};

void main() {

    uint id = gl_GlobalInvocationID.x;
    
    Pixel pix = pixels[id];
    vec2 oldpos = pix.pos;
    pix.pos = pix.fpos;

    pix.vel = pix.fvel * 0.995;
    pix.vel.y = max(min(pix.vel.y, 1.0),-1.0);
    pix.vel.x = max(min(pix.vel.x, 1.0),-1.0);
    
    if(pix.pos.y < -100.0){
        pix.pos.y = -100.0;
        pix.vel.y  *= -0.95;
        pix.vel.x  *= 0.15;
        pix.mass = 1000.0;

    }

    if(pix.pos.x > 1024.0 || pix.pos.x < -1024.0)
        pix.vel.x *= -0.9995;

    //if(length(oldpos-pix.pos) < 0.015){
    //    pix.vel *= 0.5;
    //}

    pixels[id] = pix;
}